# Generated by Django 3.2.14 on 2022-08-08 10:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=240, unique=True, verbose_name='user email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Airline_Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('Name', models.TextField(max_length=100, null=True)),
                ('Country', models.TextField(max_length=20, null=True)),
                ('Is_Active', models.BooleanField(default=True)),
                ('User_Id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icao_code', models.CharField(max_length=4)),
                ('iata_code', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('country_name', models.CharField(max_length=50)),
                ('lat_decimal', models.FloatField()),
                ('lon_decimal', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=2, unique=True)),
                ('Name', models.TextField(max_length=20, unique=True)),
                ('Flag', models.TextField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Address', models.TextField(max_length=300)),
                ('Phone_No', models.CharField(max_length=20, unique=True)),
                ('Credit_Card_No', models.CharField(max_length=50, unique=True)),
                ('User_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Departure_time', models.DateTimeField()),
                ('Landing_time', models.DateTimeField()),
                ('Flight_Number', models.CharField(max_length=20)),
                ('Remaining_Tickets', models.IntegerField()),
                ('Airline_Company_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flight_app.airline_company')),
                ('Destination_Country_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Destination_Country_Id', to='flight_app.country')),
                ('Origin_Country_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Origin_Country_Id', to='flight_app.country')),
            ],
        ),
        migrations.CreateModel(
            name='User_Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Role_Name', models.CharField(max_length=15, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Photo', models.ImageField(null=True, upload_to='images')),
                ('Role', models.ForeignKey(default='Customer', null=True, on_delete=django.db.models.deletion.CASCADE, to='flight_app.user_role')),
                ('User', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Customer_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flight_app.customer')),
                ('Flight_Id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flight_app.flight')),
            ],
        ),
        migrations.CreateModel(
            name='FlightRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.FloatField(default=0)),
                ('airline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flight_app.airline_company')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Destination_Airport', to='flight_app.airport')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Origin_Airport', to='flight_app.airport')),
            ],
        ),
        migrations.AddField(
            model_name='airport',
            name='country_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flight_app.country'),
        ),
        migrations.AddConstraint(
            model_name='ticket',
            constraint=models.UniqueConstraint(fields=('Flight_Id', 'Customer_Id'), name='Ticket_Id'),
        ),
    ]
